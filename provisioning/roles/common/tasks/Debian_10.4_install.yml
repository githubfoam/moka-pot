---
#https://docs.ansible.com/ansible/2.3/include_vars_module.html
- name: "Load a variable file based on the OS type, or a default if not found"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_os_family }}.yml"
    - "{{ ansible_distribution }}_{{ ansible_distribution_version }}.yml"
    - default.yml

- name: "Install system packages w apt - git problem"
  apt:
    name: git
    state: present

- name: "Install system packages w dpkg- git problem"
  package:
    name: '{{ system_packages }}'
    use: '{{ ansible_pkg_mgr }}'
    state: present

# Warning: apt-key output should not be parsed (stdout is not a terminal)\ngpg: keyserver receive failed: No data\n"
# - name: "Add an apt key by id from a keyserver"
#   apt_key:
#     keyserver: hkp://keys.gnupg.net
#     id: 041886AC81B32F8A9363C9D413242C996AE977A3
    
- name: "Add an Apt signing key, uses whichever key is at the URL"
  apt_key:
    url: https://archive.kali.org/archive-key.asc
    state: present

# - name: "Add an Apt signing key, will not download if present"
#   apt_key:
#     id: 041886AC81B32F8A9363C9D413242C996AE977A3        
#     url: https://archive.kali.org/archive-key.asc
#     state: present

- name: "Install Kali Repos"
  apt_repository:
    repo: "deb http://http.kali.org/kali kali-rolling main contrib non-free"
    state: present
    filename: kali.list

- name: "Update all packages to the latest version"
  apt:
    update_cache: true
    upgrade: safe  

- name: "Enable Wireshark setuid debconf selection"
  debconf:
    name: wireshark
    question: wireshark-common/install-setuid
    value: 'true'
    vtype: boolean 

- name: "Install kali os packages"
  apt:
    name: "{{ kali_os_packages }}"
    state: present

- name: "Install kali tool packages"
  apt:
    name: "{{ kali_tool_packages }}"
    state: present
  environment:
    RUNLEVEL: 1

- name: "Remove unnecessary packages  clean apt cache"
  apt:
    autoremove: true
    autoclean: true

- name: "Install Python Pip Packages"
  pip:
    name: "{{ item }}"
    state: latest
    # executable: pip3
    executable: /usr/local/bin/pip
  loop: "{{ python_pip_packages }}"

- name: "Install Ruby gems"
  gem:
    name: "{{ item }}"
    state: latest
    loop: "{{ ruby_gem_packages }}"